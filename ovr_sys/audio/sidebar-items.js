initSidebarItems({"constant":[["OVR_AUDIO_MAX_DEVICE_STR_SIZE",""],["ovrHapticsGenMode_Count",""],["ovrHapticsGenMode_PointSample","Point sample original signal at Haptics frequency"]],"fn":[["ovr_GenHapticsFromAudioData","Generates playable Touch Haptics data from an audio channel."],["ovr_GetAudioDeviceInGuid","Gets the GUID of the preferred VR microphone device."],["ovr_GetAudioDeviceInGuidStr","Gets the GUID of the preferred VR microphone device as a string."],["ovr_GetAudioDeviceInWaveId","Gets the ID of the preferred VR audio input device."],["ovr_GetAudioDeviceOutGuid","Gets the GUID of the preferred VR audio device."],["ovr_GetAudioDeviceOutGuidStr","Gets the GUID of the preferred VR audio device as a string."],["ovr_GetAudioDeviceOutWaveId","Gets the ID of the preferred VR audio output device."],["ovr_ReadWavFromBuffer","Reads an audio channel from Wav (Waveform Audio File) data. Input must be a byte buffer representing a valid Wav file. Audio samples from the specified channel are read, converted to float [-1.0f, 1.0f] and returned through `ovrAudioChannelData`."],["ovr_ReleaseAudioChannelData","Releases memory allocated for `ovrAudioChannelData`. Must be called to avoid memory leak."],["ovr_ReleaseHapticsClip","Releases memory allocated for `ovrHapticsClip`. Must be called to avoid memory leak."]],"struct":[["ovrAudioChannelData","Store audio PCM data (as 32b float samples) for an audio channel."],["ovrHapticsClip","Store a full Haptics clip, which can be used as data source for multiple `ovrHapticsBuffer`s."]],"type":[["ovrHapticsGenMode","Modes used to generate Touch Haptics from audio PCM buffer."]]});